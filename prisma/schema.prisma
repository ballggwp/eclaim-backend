generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// ผู้ใช้งานระบบ
model User {
  userId             String              @id @default(uuid())
  email              String              @unique
  password           String
  name               String
  role               Role                @default(USER)
  adminConfirmations AdminConfirmation[] @relation("ConfirmsBy")
  approvals          Approval[]          @relation("ApprovalsBy")
  historyLogs        History[]           @relation("LogsBy")
  forms              InsuranceForm[]     @relation("FormCreator")
  renewalsRequested  Renewal[]           @relation("RequestedBy")
}

/// ฟอร์มคำขอประกัน
model InsuranceForm {
  formId             String              @id @default(uuid())
  creatorId          String
  createdDate        DateTime            @default(now())
  status             FormStatus          @default(DRAFT)
  company            String
  factory            String
  address            String
  insuranceGroup     String
  insuranceType1     String
  licenseNumber      String?
  insuranceReason    String
  insuranceAmount    BigInt
  quantity           Int
  placeCount         Int
  startDate          DateTime
  startTime          String
  endDate            DateTime
  endTime            String
  totalDays          Int
  coverageDetail     String
  insuranceDocs      String
  page               Int
  notes              String?
  requestCompany     String
  requestAddress     String
  accountNumber      String
  costCenter         String
  ioNumber           Int
  accountCode        String
  accountName        String
  requester          String
  supervisor         String
  inspector          String
  adminConfirmations AdminConfirmation[] @relation("ConfirmsOn")
  approvals          Approval[]          @relation("ApprovalsOn")
  history            History[]           @relation("HistoryOn")
  creator            User                @relation("FormCreator", fields: [creatorId], references: [userId])
  newRenewals        Renewal[]           @relation("NewForm")
  originalRenewals   Renewal[]           @relation("OriginalForm")
}

/// บันทึกแต่ละขั้นตอน Approver ระดับ 1–3
model Approval {
  approvalId String        @id @default(uuid())
  formId     String
  approverId String
  sequence   Int
  decision   String
  approvedAt DateTime?
  approver   User          @relation("ApprovalsBy", fields: [approverId], references: [userId])
  form       InsuranceForm @relation("ApprovalsOn", fields: [formId], references: [formId])
}

/// บันทึกการ confirm/reject ฝั่ง Admin
model AdminConfirmation {
  confirmId   String        @id @default(uuid())
  formId      String
  adminId     String
  decision    String
  confirmedAt DateTime?
  admin       User          @relation("ConfirmsBy", fields: [adminId], references: [userId])
  form        InsuranceForm @relation("ConfirmsOn", fields: [formId], references: [formId])
}

/// ประวัติการ renew/log
model History {
  historyId String        @id @default(uuid())
  formId    String
  actorId   String
  action    String
  timestamp DateTime      @default(now())
  actor     User          @relation("LogsBy", fields: [actorId], references: [userId])
  form      InsuranceForm @relation("HistoryOn", fields: [formId], references: [formId])
}

/// เก็บข้อมูลการต่ออายุ/ปรับลดฟอร์ม
model Renewal {
  renewalId      String        @id @default(uuid())
  originalFormId String
  newFormId      String
  requestedById  String
  requestedAt    DateTime      @default(now())
  newForm        InsuranceForm @relation("NewForm", fields: [newFormId], references: [formId])
  originalForm   InsuranceForm @relation("OriginalForm", fields: [originalFormId], references: [formId])
  requestedBy    User          @relation("RequestedBy", fields: [requestedById], references: [userId])
}

/// Roles ของผู้ใช้
enum Role {
  USER
  APPROVER1
  APPROVER2
  APPROVER3
  ADMIN
}

/// สถานะของฟอร์ม
enum FormStatus {
  DRAFT
  PENDING_APPROVE_1
  PENDING_APPROVE_2
  PENDING_APPROVE_3
  PENDING_CONFIRM
  CONFIRMED
  REJECTED
  RENEWED
}

/// ประเภทการต่ออายุ/ปรับลด
enum RenewalType {
  EXTEND
  REDUCE
  INCREASE
  CANCEL
  MODIFY
}
